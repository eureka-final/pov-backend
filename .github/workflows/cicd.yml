name: AWS CI/CD TEST

on:
  pull_request:
    types: [closed]

env:
  AWS_REGION: ap-northeast-2
  AWS_S3_BUCKET: pov-s3-01

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      # Java 17 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Gradle 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Gradle 빌드 실행
      - name: Build with Gradle
        run: ./gradlew build

      # 실행 가능한 JAR 파일 감지
      - name: Detect Executable JAR File
        id: detect_jar
        run: |
          JAR_FILE=$(ls build/libs/*-SNAPSHOT.jar | head -n 1)
          if [ -z "$JAR_FILE" ]; then
            echo "No executable JAR file found."
            exit 1
          fi
          echo "JAR_FILE=$JAR_FILE" >> $GITHUB_ENV

      # AWS 권한 설정
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # S3 업로드
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ${{ env.JAR_FILE }} s3://$AWS_S3_BUCKET/

      # SSH 키 설정
      - name: Configure SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
        shell: bash

      # 첫 번째 인스턴스 배포
      - name: Deploy to EC2 Instance 1
        run: |
          ssh-keyscan -H ${{ secrets.EC2_PUBLIC_IP_01 }} >> ~/.ssh/known_hosts
          ssh -i ~/.ssh/id_ed25519 ubuntu@${{ secrets.EC2_PUBLIC_IP_01 }} << 'EOF'
          cd /home/ubuntu/pov-backend
          git pull
          chmod +x scripts/deploy.sh
          ./scripts/deploy.sh
          EOF
        env:
          DB_URL: ${{ secrets.DB_URL }}
          DB_ADMIN_USERNAME: ${{ secrets.DB_ADMIN_USERNAME }}
          DB_ADMIN_PASSWORD: ${{ secrets.DB_ADMIN_PASSWORD }}

      # 두 번째 인스턴스 배포
      - name: Deploy to EC2 Instance 2
        run: |
          ssh-keyscan -H ${{ secrets.EC2_PUBLIC_IP_02 }} >> ~/.ssh/known_hosts
          ssh -i ~/.ssh/id_ed25519 ubuntu@${{ secrets.EC2_PUBLIC_IP_02 }} << 'EOF'
          cd /home/ubuntu/pov-backend
          git pull
          chmod +x scripts/deploy.sh
          ./scripts/deploy.sh
          EOF
        env:
          DB_URL: ${{ secrets.DB_URL }}
          DB_ADMIN_USERNAME: ${{ secrets.DB_ADMIN_USERNAME }}
          DB_ADMIN_PASSWORD: ${{ secrets.DB_ADMIN_PASSWORD }}